#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;

    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        center_qulick {
            bindings = <&mkp MB3>;
            key-positions = <7 8>;
        };

        bspc {
            bindings = <&jkp BSPC>;
            key-positions = <8 9>;
        };

        shift {
            bindings = <&jkp LSHIFT>;
            key-positions = <10 11>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        left_qulick {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        right_qulick {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        double_quotation {
            bindings = <&jkp SQT>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
        
        ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <32 33>;
        };
        
        esc {
            bindings = <&kp ESC>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
        css: css {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LGUI>
                ;
        };
        altprsc: altprsc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp PSCRN>
                , <&macro_release &kp LALT>
                ;
        };
        winl: winl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp L>
                , <&macro_release &kp LGUI>
                ;
        };
        cad: cad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp DEL>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LCTL>
                ;
        };
        excel: excel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_tap &kp LALT>
                , <&macro_tap &kp J>
                , <&macro_tap &kp P>
                , <&macro_tap &kp S>
                , <&macro_tap &kp Z>
                , <&macro_tap &kp DEL>
                , <&macro_tap &kp DEL>
                , <&macro_tap &kp N7>
                , <&macro_tap &kp ESC>
                ;
        };
        v_excel: v_excel {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_tap &ctrlv>
                , <&macro_tap &excel>
                ;
        };
        winv: winv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LEFT_WIN>
                , <&macro_tap &kp V>
                , <&macro_release &kp LEFT_WIN>
                ;
        };
        timestamp: timestamp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LCTL>
                , <&macro_press &jkp LSHIFT>
                , <&macro_tap &jkp SEMI>
                , <&macro_release &jkp LSHIFT>
                , <&macro_release &kp LCTL>
                ;
        };
        ctrlv: ctrlv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };
        ctrlc: ctrlc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };
        ctrlx: ctrlx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };
        mute: mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <100>;
            bindings
                = <&macro_press &kp LEFT_WIN>
                , <&macro_press &kp LALT>
                , <&macro_tap &kp K>
                , <&macro_release &kp LALT>
                , <&macro_release &kp LEFT_WIN>
                ;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        td_alt: td_alt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LALT LALT>, <&css>, <&altprsc>;
        };
        macro: macro {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&mute>;
        };
        jkp: jp_key_press {
            compatible = "zmk,behavior-jp-key-press";
            #binding-cells = <1>;
        };
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            // 追加: スクロールのタップ時間を設定 (20ms)
            tap-ms = <20>;
        };
        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;
            // 追加: スクロールのタップ時間を設定 (20ms)
            tap-ms = <20>;
        };
        arrow_p: arrow-positive {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LEFT>;
            tap-ms = <20>;
        };       
        volume_up_down: volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_VOL_UP>;
            tap-ms = <20>;
        };       
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R               &kp T                                           &kp Y      &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F               &kp G        &kp LS(LG(S))       &jkp SQT       &kp H      &kp J  &lt 5 K    &kp L    &jkp SEMI
&kp Z             &kp X         &kp C         &kp V               &kp B        &macro              &kp K_APP      &kp N      &kp M  &jkp COMMA &jkp DOT &jkp FSLH
&kp LCTRL         &jkp LSHIFT   &kp LEFT_WIN  &mt LSHIFT KC_IME   &lt 1 SPACE  &td_alt             &lt 6 BSPC     &lt 2 RET                               &kp ESC
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&jkp N1     &jkp N2 &jkp N3  &jkp N4  &jkp N5                         &jkp N6  &jkp N7  &jkp N8  &jkp N9   &jkp N0
&jkp LSHIFT &kp DEL &kp LALT &kp LGUI &winl     &trans      &kp PRSC  &kp HOME &mkp MB1 &kp UP   &mkp MB2  &kp PG_UP
&kp LCTRL   &ctrlx  &ctrlc   &ctrlv   &v_excel  &timestamp  &altprsc  &kp END  &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN
&trans      &excel  &trans   &trans   &trans    &trans      &trans    &trans                               &trans
            >;

            sensor-bindings = <&arrow_p>;
        };

        NUM {
            bindings = <
&kp EXCL &jkp AT &kp HASH &kp DLLR  &kp PRCT                                     &jkp CARET &jkp AMPERSAND  &jkp ASTERISK  &jkp LEFT_PARENTHESIS &jkp RIGHT_PARENTHESIS
&none    &none   &none    &jkp CAPS &none    &kp LC(LA(KP_NUMBER_0))   &jkp TILD &jkp MINUS &jkp EQL        &jkp LBKT      &jkp RBKT             &jkp BSLH
&none    &cad    &none    &winv     &none    &none                     &jkp BSPC &jkp UNDER &jkp PLUS       &jkp LBRC      &jkp RBRC             &jkp PIPE
&trans   &trans  &trans   &trans    &trans   &trans                    &trans    &trans                                                          &jkp GRAV
            >;

            sensor-bindings = <&scroll_left_right>;
        };

        ARROW {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4     &kp F5                        &kp F6         &kp F7         &kp F8         &kp F9         &kp F10
&none   &none   &none   &jkp JPUS  &trans   &trans      &kp F12  &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0
&none   &none   &none   &none      &trans   &trans      &kp F11  &out OUT_TOG   &trans         &trans         &trans         &sys_reset
&trans  &trans  &trans  &trans     &trans   &trans      &trans   &trans                                                      &bt BT_CLR
            >;

            sensor-bindings = <&volume_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans   &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans   &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &mkp MB3 &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                               &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans   &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1 &trans  &mkp MB2 &mkp MB5
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans   &trans  &trans   &mkp MB4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        layer_6 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4     &kp F5                                 &kp F6         &kp F7         &kp F8         &kp F9         &kp F10
&none   &none   &none   &jkp JPUS  &jkp KC_SET_PER   &trans      &kp F12  &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0
&none   &none   &none   &none      &trans            &trans      &kp F11  &out OUT_TOG   &trans         &trans         &trans         &sys_reset
&trans  &trans  &trans  &trans     &trans            &trans      &trans   &trans                                                      &bt BT_CLR
            >;

            sensor-bindings = <&volume_up_down>;
        };
    };
};
